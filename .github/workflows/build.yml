name: Build & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

jobs:
  install:
    name: Install Flutter and dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Install Flutter (beta)
      uses: subosito/flutter-action@v1
      with:
        channel: "stable" # or: 'dev' or 'beta'

    - name: Install dependencies
      run: flutter pub get

    - name: Create temp dir
      run: mkdir ./temp
    - name: Download HPI Cloud APIs
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HPI-de/hpi-cloud-apis
        tag: '0.0.11'
        path: ./temp
        file: generated-dart.zip
    - name: Unzip HPI Cloud APIs
      run: unzip ./temp/generated-dart.zip -d ./lib
    - name: Delete temp dir
      run: rm -r ./temp

    - name: Run code generator(s)
      run: flutter pub run build_runner build
      
    - name: Remove obsolete files
      run: |
        rm -rf ./.dart_tool/pub/bin/build_runner
    - name: Persist current state
      uses: actions/upload-artifact@v1
      with:
        name: source
        path: .

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Install Flutter (stable)
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Checkout source
        uses: actions/download-artifact@v1
        with:
          name: source
          path: .

      - name: Run linter
        run: flutter analyze > flutter_analyze_report.txt
        continue-on-error: true

      - name: Install ruby
        uses: actions/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: "2.6"
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle install --without documentation
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        uses: MeilCli/danger-action@v1
        if: github.event_name == 'pull_request'
        with:
          danger_file: Dangerfile
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Install Flutter (stable)
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Checkout source
        uses: actions/download-artifact@v1
        with:
          name: source
          path: .

      - run: flutter build apk --release

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: build/app/outputs/apk/sc/release
